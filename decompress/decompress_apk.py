# encoding: utf-8
import os
import config
import log
import utils
LOG_FILE = "decompress_apk.txt"
DEVICE = "M"
def decompress_by7z(src_path, des_path):
    try:
        dep_7z_path = config.LIB_7Z_PATH
        cmd ="{0} x {1} -y -aos -o{2}".format(dep_7z_path,src_path,des_path)
        print(cmd)
        os.system(cmd)
    except Exception as e:
        log.print_and_write(LOG_FILE, e, type="ERROR", remark=src_path)

if __name__ == "__main__":

    if DEVICE == "M":
        malware_dir_path = config.DATA_MALWARE_SET_PATH
        decompress_dir_path = config.DATA_MALWARE_DECOMPRESS_PATH
    elif DEVICE == "B":
        malware_dir_path = config.DATA_XIAOMI_APK_PATH
        decompress_dir_path = config.DATA_BENIGN_DECOMPRESS_PATH

    files = utils.get_files_from_dir(malware_dir_path, file_type=None)

    log.print_and_write(LOG_FILE,"Total get {0} files".format(len(files)))

    paths = []
    for file in files:
        des_path = os.path.join(decompress_dir_path,file.split("\\")[-1])
        if os.path.exists(des_path) == False:
            paths.append((file,des_path))

    log.print_and_write(LOG_FILE,"{0} files has been decompressed".format(len(files)-len(paths)))

    log.print_and_write(LOG_FILE, "{0} files need to decompressed".format(len(paths)))
    count = len(paths)
    for src_path, des_path in paths:
        decompress_by7z(src_path,des_path)
        count -= 1
        print("{0} files need to decompressed".format(count))





